#include <iostream>#include <fstream>#include <sstream>#include <chrono>#include <iomanip>#include <cmath> #include <random>#include <set>#include <vector>#include <algorithm>#include <hashish.h>void Generatevector(std::vector<std::string> & genvector){	unsigned seed = std::chrono::system_clock::now().time_since_epoch().count();	const std::string VALID_CHARS = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";	std::mt19937 generator(seed);	std::uniform_int_distribution<std::mt19937::result_type> distribution(0,VALID_CHARS.size() - 1);		std::ostringstream oss;    std::set<std::string> setas;	std::ofstream fr("../randomText/generuotasTekstas.txt");    std::vector<std::string>::iterator ip;    std::vector<std::string> temp;    while(genvector.size() != 2222222) {        for (std::size_t i = 0; i < 5; ++i)        {            oss << VALID_CHARS[distribution(generator)];        }        std::string first = oss.str();        genvector.push_back(first);        oss.clear();        oss.str("");    }    ip = std::unique(genvector.begin(), genvector.begin()+2222222);    genvector.resize(std::distance(genvector.begin(), ip));    std::vector<std::string>::iterator itr;    for(int i = 0; i < 2222222;i++){        if(i%2==0) {            fr << genvector[i] << " ";        }        else {            fr << genvector[i]<< std::endl;        }    }	fr.close();}